import{CREATE_CART_MUTATION,FETCH_CART_QUERY,ADD_TO_CART_MUTATION,UPDATE_DISCOUNT_CODE_MUTATION,CART_ATTRIBUTES_UPDATE_MUTATION,CART_BUYER_IDENTITY_UPDATE_MUTATION}from"./shopifyApi.js";let cart=null,isLoading=!1,elevarCartInitialized=!1;const UVLIZER_PREFIX="uvlizer_",CART_ID_STORAGE_KEY="uvlizer_cart_id",cartLoadingOverlay=document.getElementById("cart-loading-overlay"),cartErrorContainer=document.getElementById("cart-error"),cartErrorMessage=document.getElementById("cart-error-message"),checkoutBtn=document.getElementById("checkout-btn");function getSelectedVariantId(){const r=document.querySelector('input[name="bundle"]:checked');if(r){const t=r.closest("label").getAttribute("data-variant-id");if(t)return t}const t=document.querySelector("label[data-variant-id]");if(t){const r=t.getAttribute("data-variant-id");if(r)return r}return console.error("Could not find any variant ID in bundle options."),null}function getUrlParameters(){const r=new URLSearchParams(window.location.search),t=["utm_source","utm_medium","utm_campaign","utm_term","utm_content","ref","gclid","fbclid"],e=[],a=["email","phone","firstname","lastname","address","zip","postcode","ssn","password"];return r.forEach(((r,o)=>{const i=o.toLowerCase();t.includes(i)&&!a.includes(i)&&r&&o.length<=50&&r.length<=250&&e.push({key:o,value:r})})),e}async function callShopifyAPI(r,t={}){cartLoadingOverlay&&checkoutBtn&&(isLoading=!0,document.body.style.cursor="wait",cartLoadingOverlay.classList.remove("hidden"),checkoutBtn.disabled=!0,checkoutBtn.classList.add("opacity-50"));try{const e=await fetch("/.netlify/functions/shopify-proxy",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({query:r,variables:t})});if(!e.ok){const r=await e.text();throw new Error(`Function call failed with status ${e.status}. ${r}`)}const a=await e.json();if(a.errors)throw new Error(`GraphQL error: ${a.errors[0].message}`);if(!a||void 0===a.data)throw new Error("Invalid response from API proxy");const o=Object.keys(a.data||{});if(o.length>0){const r=a.data[o[0]];if(r?.userErrors?.length>0)throw new Error(`Shopify error: ${r.userErrors[0].message}`)}return a.data}catch(r){throw console.error("Error in callShopifyAPI:",r),cartErrorMessage&&cartErrorContainer?(cartErrorMessage.textContent=r.message||"An API error occurred.",cartErrorContainer.classList.remove("hidden"),setTimeout((()=>cartErrorContainer.classList.add("visible")),10)):alert(r.message||"An API error occurred."),r}finally{cartLoadingOverlay&&checkoutBtn&&(isLoading=!1,document.body.style.cursor="default",cartLoadingOverlay.classList.add("hidden"))}}function createElevarProductObjCore(r){let t=r.merchandise?.price?.amount,e=r.merchandise?.compareAtPrice?.amount,a=19900,o=24900;try{if("number"==typeof t)a=Number.isInteger(t)?t:Math.round(100*t);else if("string"==typeof t){const r=parseFloat(t);isNaN(r)||(a=t.includes(".")?Math.round(100*r):parseInt(t,10))}}catch(r){}try{if("number"==typeof e)o=Number.isInteger(e)?e:Math.round(100*e);else if("string"==typeof e){const r=parseFloat(e);o=isNaN(r)?a:e.includes(".")?Math.round(100*r):parseInt(e,10)}else o=a}catch(r){o=a}return{id:r.merchandise?.product?.handle||"",name:r.merchandise?.product?.title||"",brand:"Uvlizer",category:"Home & Garden",variant:r.merchandise?.title||"",price:(a/100).toFixed(2),quantity:r.quantity?.toString()||"1",product_id:r.merchandise?.product?.id?.substring(r.merchandise.product.id.lastIndexOf("/")+1)||"",variant_id:r.merchandise?.id?.substring(r.merchandise.id.lastIndexOf("/")+1)||"",compare_at_price:(o/100).toFixed(2),image:r.merchandise?.image?.url||"",list:location.pathname}}function createElevarViewItemObj(){return{id:"uvo-powered-home-disinfection-tower-new",name:"UVO254â„¢ -  Powered Home Disinfection Tower",brand:"Uvlizer",category:"Home & Garden",variant:"Default Title",price:"79.95",product_id:"8000627572985",variant_id:"44103628357881",compare_at_price:"99.95",list:location.pathname,image:"https://www.uvlizer.us/cdn/shop/files/Uv1_d65306eb-669a-4b43-9fc9-ad8f3a15c0ba_900x.png?v=1713433283"}}function onMidaReady(r){window.mida?r():window.mfunc.push(r)}function initializeElevarCore(){if(elevarCartInitialized)return;const r=()=>{if(window.mida&&window.mida.isRedirect)return;window.ElevarDataLayer=window.ElevarDataLayer||[];const r=cart?.lines?.nodes.map(createElevarProductObjCore)||[];let t=cart?.cost?.totalAmount?.amount,e=0;try{if("number"==typeof t)e=Number.isInteger(t)?t:Math.round(100*t);else if("string"==typeof t){const r=parseFloat(t);isNaN(r)||(e=t.includes(".")?Math.round(100*r):parseInt(t,10))}}catch(r){}const a={event:"dl_user_data",cart_total:(e/100).toFixed(2),user_properties:{visitor_type:"guest"},ecommerce:{currencyCode:cart?.cost?.totalAmount?.currencyCode||"USD",cart_contents:{products:r}}};window.ElevarDataLayer.push(a),elevarCartInitialized=!0,triggerViewItemEventCore()};void 0===window.mida?r():onMidaReady(r)}function triggerViewItemEventCore(){if(!window.ElevarDataLayer)return;const r=createElevarViewItemObj(),t={event:"dl_view_item",user_properties:{visitor_type:"guest"},ecommerce:{currencyCode:"USD",detail:{actionField:{list:location.pathname,action:"detail"},products:[r]}}};window.ElevarDataLayer.push(t)}async function getOrCreateCartInternal(){let r=null;try{r=localStorage.getItem("uvlizer_cart_id")}catch(r){}if(r)try{const t=await callShopifyAPI(FETCH_CART_QUERY,{cartId:r});if(t?.cart)return t.cart;try{localStorage.removeItem("uvlizer_cart_id")}catch(r){}}catch(r){console.error("Error fetching existing cart:",r);try{localStorage.removeItem("uvlizer_cart_id")}catch(r){}}try{const r=getUrlParameters(),t=30;const e={cartInput:{lines:[],attributes:r.slice(0,t)}},a=await callShopifyAPI(CREATE_CART_MUTATION,e);if(a?.cartCreate?.cart){const r=a.cartCreate.cart;try{localStorage.setItem("uvlizer_cart_id",r.id)}catch(r){}return r}throw new Error(a?.cartCreate?.userErrors?.[0]?.message||"Cart creation failed unexpectedly.")}catch(r){throw console.error("Error creating new cart:",r),r}}function setupCoreAliaListeners(){document.addEventListener("alia:signup",(async r=>{if(isLoading)return;const{email:t,phone:e}=r.detail;if(!t&&!e)return;if(!cart)try{await cartPromise}catch(r){return void console.error("Cart needed for signup but failed to init:",r)}if(!cart)return;const a={};t&&(a.email=t),e&&(a.phone=e);try{const r=await callShopifyAPI(CART_BUYER_IDENTITY_UPDATE_MUTATION,{cartId:cart.id,buyerIdentity:a});if(!r?.cartBuyerIdentityUpdate?.cart)throw new Error(r?.cartBuyerIdentityUpdate?.userErrors?.[0]?.message||"Unknown error updating buyer identity.");cart=r.cartBuyerIdentityUpdate.cart}catch(r){console.error("Error updating buyer identity:",r)}})),document.addEventListener("alia:pollAnswered",(async r=>{if(isLoading)return;const{answers:t}=r.detail;if(!t||0===t.length)return;if(!cart)try{await cartPromise}catch(r){return void console.error("Cart needed for poll but failed to init:",r)}if(!cart)return;if(0===t.map((r=>({key:`poll_${r.questionID||"question"}`,value:`${r.questionText}: ${r.answerText}`}))).filter((r=>r.key.length<=100&&r.value.length<=255)).length)return;const e=[...(cart&&Array.isArray(cart.attributes)?cart.attributes:[]).filter((r=>!r.key.startsWith("poll_"))),...validNewPollAttributes];try{const r=await callShopifyAPI(CART_ATTRIBUTES_UPDATE_MUTATION,{cartId:cart.id,attributes:e});if(!r?.cartAttributesUpdate?.cart)throw new Error(r?.cartAttributesUpdate?.userErrors?.[0]?.message||"Unknown error updating cart attributes.");cart=r.cartAttributesUpdate.cart}catch(r){console.error("Error updating cart attributes with poll answers:",r)}}))}window.mfunc=window.mfunc||[];const cartPromise=(async()=>{try{if(cart=await getOrCreateCartInternal(),!cart)throw new Error("Cart initialization failed");return initializeElevarCore(),setupCoreAliaListeners(),cart}catch(r){throw console.error("Critical Cart Initialization Error:",r),r}})();export const getCart=()=>cartPromise;export const cartReady=cartPromise.then((()=>{}));export{callShopifyAPI};export{addCartLine,applyDiscountCode};async function applyDiscountCode(r,t=null){if(!r)throw new Error("Cart ID is missing.");const e=t?Array.isArray(t)?t:[t]:[];try{const t=await callShopifyAPI(UPDATE_DISCOUNT_CODE_MUTATION,{cartId:r,discountCodes:e}),a=t?.cartDiscountCodesUpdate?.cart,o=t?.cartDiscountCodesUpdate?.userErrors;if(o&&o.length>0)throw new Error(o[0].message);if(!a)throw new Error("Failed to update cart with discount code.");return cart=a,a}catch(r){throw console.error("Error applying/removing discount code:",r),r}}async function addCartLine(r,t,e=1){if(!t)return cart;JSON.parse(JSON.stringify(cart));const a=await callShopifyAPI(ADD_TO_CART_MUTATION,{cartId:r,lines:[{merchandiseId:t,quantity:e}]}),o=a?.cartLinesAdd?.cart;return o&&(cart=o),o}function showCartError(r){cartErrorMessage&&cartErrorContainer?(cartErrorMessage.textContent=r,cartErrorContainer.classList.remove("hidden"),setTimeout((()=>cartErrorContainer.classList.add("visible")),10)):(console.warn("Cart error elements not found for core error display, falling back to console"),console.error("Cart Core Error:",r))}